{"version":3,"sources":["webpack://HWGA/./src/index.js"],"names":["document","addEventListener","taskInput","getElementById","addButton","list","tasks","console","log","localStorage","getItem","JSON","parse","forEach","task","liElement","createElement","classList","add","innerHTML","append","createTask","value","deleteTask","editTask","text","push","setItem","stringify","querySelectorAll","deleteButton","taskText","this","parentElement","querySelector","innerText","newTasks","filter","remove","editButton","parent","newInput","prepend","newtaskText","newTask"],"mappings":"mBAGAA,SAASC,iBAAiB,oBAAoB,WAE1C,MAAMC,EAAYF,SAASG,eAAe,aACtCC,EAAYJ,SAASG,eAAe,aACpCE,EAAOL,SAASG,eAAe,QAC/BG,EAAQ,GAIZ,GADAC,QAAQC,IAAIC,aAAaC,QAAQ,UAC7BD,aAAaC,QAAQ,SAAS,CAC9B,MAAMJ,EAAQK,KAAKC,MAAMH,aAAaC,QAAQ,UAE9CH,QAAQC,IAAIF,GACZA,EAAMO,SAAQC,IACV,IAAIC,EAAYf,SAASgB,cAAc,MACvCD,EAAUE,UAAUC,IAAI,aACxBH,EAAUI,UAAa,mBACnBL,wHAIJT,EAAKe,OAAOL,MASpBX,EAAUH,iBAAiB,SAAS,KAChCoB,EAAWnB,EAAUoB,OACrBC,IACAC,OAGJ,MAAMH,EAAcI,IAChBnB,EAAMoB,KAAKD,GACXhB,aAAakB,QAAQ,QAAShB,KAAKiB,UAAUtB,IAE7C,IAAIS,EAAYf,SAASgB,cAAc,MACvCD,EAAUE,UAAUC,IAAI,aACxBH,EAAUI,UAAa,mBACfM,2HAIRpB,EAAKe,OAAOL,IAIVQ,EAAa,KAEOvB,SAAS6B,iBAAiB,iBAElChB,SAAQiB,IAClBA,EAAa7B,iBAAiB,SAAS,WAEnC,MAAM8B,EAAWC,KAAKC,cAAcC,cAAc,QAAQC,UACpDC,EAAW9B,EAAM+B,QAAOvB,GAAQA,IAASiB,IAC/CtB,aAAakB,QAAQ,QAASS,GAC9B7B,QAAQC,IAAIC,aAAaC,QAAQ,UAGjCsB,KAAKC,cAAcK,gBAKzBd,EAAW,KACOxB,SAAS6B,iBAAiB,eAClChB,SAAQ0B,IAChBA,EAAWtC,iBAAiB,SAAS,WAEjC,MAAMuC,EAASR,KAAKC,cAEpB,GAAuB,SAAnBD,KAAKG,UAAsB,CAC3BH,KAAKG,UAAY,OAEjB,MAAMrB,EAAO0B,EAAON,cAAc,QAC5BH,EAAWjB,EAAKqB,UAEtBrB,EAAKwB,SAEL,MAAMG,EAAWzC,SAASgB,cAAc,SACxCyB,EAASnB,MAAQS,EACjBS,EAAOE,QAAQD,OAEZ,CACHT,KAAKG,UAAY,OAEjB,MAAMM,EAAWD,EAAON,cAAc,SAChCS,EAAcF,EAASnB,MAE7BmB,EAASH,SAET,MAAMM,EAAU5C,SAASgB,cAAc,QACvC4B,EAAQT,UAAYQ,EACpBH,EAAOE,QAAQE,e","file":"js/index.3f6629ceb40d33fe7648.bundle.js","sourcesContent":["import './scss/style.scss'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n    const taskInput = document.getElementById('taskInput'),\n        addButton = document.getElementById('addButton'),\n        list = document.getElementById('list'),\n        tasks = []\n\n\n    console.log(localStorage.getItem(\"tasks\"));\n    if (localStorage.getItem(\"tasks\")){\n        const tasks = JSON.parse(localStorage.getItem(\"tasks\"))\n\n        console.log(tasks);\n        tasks.forEach(task => {\n            let liElement = document.createElement('li')\n            liElement.classList.add('liElement')\n            liElement.innerHTML = `\n        <span>${task}</span>\n        <button class=\"editButton\">Edit</button>\n        <button class=\"deleteButton\">X</button>\n        `\n            list.append(liElement)\n        })\n    }\n\n\n\n\n\n\n    addButton.addEventListener('click', () => {\n        createTask(taskInput.value)\n        deleteTask()\n        editTask()\n    })\n\n    const createTask = (text) => {\n        tasks.push(text)\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n\n        let liElement = document.createElement('li')\n        liElement.classList.add('liElement')\n        liElement.innerHTML = `\n        <span>${text}</span>\n           <button class=\"editButton\">Edit</button>\n            <button class=\"deleteButton\">X</button>\n    `\n        list.append(liElement)\n    }\n\n\n    const deleteTask = () => {\n\n        const deleteButtons = document.querySelectorAll('.deleteButton')\n\n        deleteButtons.forEach(deleteButton => {\n            deleteButton.addEventListener('click', function () {\n\n                const taskText = this.parentElement.querySelector('span').innerText\n                const newTasks = tasks.filter(task => task !== taskText)\n                localStorage.setItem(\"tasks\", newTasks)\n                console.log(localStorage.getItem(\"tasks\"));\n\n\n                this.parentElement.remove()\n            })\n        })\n    }\n\n    const editTask = () => {\n        const editButtons = document.querySelectorAll('.editButton')\n        editButtons.forEach(editButton => {\n            editButton.addEventListener('click', function () {\n\n                const parent = this.parentElement;\n\n                if (this.innerText === \"Edit\") {\n                    this.innerText = \"Done\"\n\n                    const task = parent.querySelector('span')\n                    const taskText = task.innerText\n\n                    task.remove()\n\n                    const newInput = document.createElement('input')\n                    newInput.value = taskText\n                    parent.prepend(newInput)\n\n                } else {\n                    this.innerText = \"Edit\"\n\n                    const newInput = parent.querySelector('input')\n                    const newtaskText = newInput.value\n\n                    newInput.remove()\n\n                    const newTask = document.createElement('span')\n                    newTask.innerText = newtaskText\n                    parent.prepend(newTask)\n\n                }\n\n            })\n        })\n    }\n\n\n\n  \n})\n\n\n\n\n\n\n\n"],"sourceRoot":""}